using System;
using OneSignalSDK.Xamarin.Core.Debug;
using OneSignalSDK.Xamarin.Core.InAppMessages;
using OneSignalSDK.Xamarin.Core.Location;
using OneSignalSDK.Xamarin.Core.Notifications;
using OneSignalSDK.Xamarin.Core.Session;
using OneSignalSDK.Xamarin.Core.User;

namespace OneSignalSDK.Xamarin.Core;

/// <summary>
/// The platform-independent interface for the OneSignal SDK.
/// </summary>
public interface IOneSignal
{
    /// <summary>
    /// The user manager for accessing user-scoped management.
    /// </summary>
    IUserManager User { get; }

    /// <summary>
    /// The session manager for accessing session-scoped management.
    /// </summary>
    ISessionManager Session { get; }

    /// <summary>
    /// The notification manager for accessing device-scoped notification management.
    /// </summary>
    INotificationsManager Notifications { get; }

    /// <summary>
    /// The location manager for accessing device-scoped location management.
    /// </summary>
    ILocationManager Location { get; }

    /// <summary>
    /// The In App Messaging manager for accessing device-scoped IAP management.
    /// </summary>
    IInAppMessagesManager InAppMessages { get; }

    /// <summary>
    /// Access to debug the SDK in the event additional information is required to diagnose any
    /// SDK-related issues.
    /// </summary>
    /// <remarks>
    /// This should not be used in a production setting.
    /// </remarks>
    IDebugManager Debug { get; }

    /// <summary>
    /// Determines whether a user must consent to privacy prior to their user data being sent
    /// up to OneSignal.This should be set to <code>true</code> prior to the invocation of
    /// <see cref="Initialize(string)"/>to ensure compliance.
    /// </summary>
    bool RequiresPrivacyConsent { get; set; }

    /// <summary>
    /// Indicates whether privacy consent has been granted. This field is only relevant when
    /// the application has opted into data privacy protections. <see cref="RequiresPrivacyConsent"/>.
    /// </summary>
    bool PrivacyConsent { get; set; }

    /// <summary>
    /// Initialze the OneSignal SDK.  This should be called during startup of the application.
    /// </summary>
    /// <param name="appId">The application ID the OneSignal SDK is bound to.</param>
    void Initialize(String appId);

    /// <summary>
    /// Login to OneSignal under the user identified by the[externalId] provided.The act of
    /// logging a user into the OneSignal SDK will switch the[User] context to that specific user.
    ///
    /// <list type="bullet">
    /// <item><description>
    /// If the <paramref name="externalId"/> exists the user will be retrieved
    /// and the context set from that user information. If operations have already been performed
    /// under a guest user, they <b>will not</b> be applied to the now logged in user (they will
    /// be lost).
    /// </description></item>
    /// <item><description>
    /// If the <paramref name="externalId"/> does not exist the user will be created and the
    /// context set from the current local state. If operations have already been performed
    /// under a guest user those operations <b>will</b> be applied to the newly created user.
    /// </description></item>
    /// </list>
    ///
    /// <b>Push Notifications and In App Messaging</b>
    /// Logging in a new user will automatically transfer push notification and in app messaging
    /// subscriptions from the current user(if there is one) to the newly logged in user.This is
    /// because both Push and IAM are owned by the device.
    /// </summary>
    /// <param name="externalId">The external ID of the user that is to be logged in.</param>
    /// <param name="jwtBearerToken">
    /// The optional JWT bearer token generated by your backend to establish trust for the
    /// login operation.Required when identity verification has been enabled.  See
    /// <a href="https://documentation.onesignal.com/docs/identity-verification">Identity Verification | OneSignal</a>
    /// </param>
    void Login(String externalId, String? jwtBearerToken = null);

    /// <summary>
    /// Logout the user previously logged in via <see cref="Login(string, string?)"/>. The
    /// <see cref="User"/> property now references a new device-scoped user.A device-scoped
    /// user has no user identity that can later be retrieved, except through this device as
    /// long as the app remains installed and the app data is not cleared.
    /// </summary>
    void Logout();
}